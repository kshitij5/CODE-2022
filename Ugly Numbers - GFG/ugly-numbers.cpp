// { Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

#define ull unsigned long long


 // } Driver Code Ends
//User function template for C++
class Solution{
public:	
	// #define ull unsigned long long
	/* Function to get the nth ugly number*/
	
    // simple brute force
//     bool isUgly(int num){
//         if (num <= 0) return false;
//         while(num % 3 == 0) num /= 3;
//         while(num % 5 == 0) num /= 5;
//         return (num  & (num - 1)) == 0;
//     }
    
// 	ull getNthUglyNo(int n) {
// 	    vector<ull> ugly;
// 	    for(int i=1; ugly.size()<n; i++) {
// 	        if(isUgly(i)) ugly.push_back(i);
// 	    }
// 	    return ugly[n-1];
// 	}

    // effecient solution 
    // using the fact that the next ugly number
    // is generated by a former ugly number 
    // multiplied by 2, 3 or 5
    ull getNthUglyNo(int n) {
        vector <ull> results (1,1);
        ull i = 0, j = 0, k = 0;
        
        while (results.size() < n) {
            results.push_back(min(results[i] * 2, min(results[j] * 3, results[k] * 5)));
            if (results.back() == results[i] * 2) ++i;
            if (results.back() == results[j] * 3) ++j;
            if (results.back() == results[k] * 5) ++k;
        }
        return results.back();
    }
};

// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        Solution ob;
        auto ans = ob.getNthUglyNo(n);
        cout << ans << "\n";
    }
    return 0;
}
  // } Driver Code Ends